---
import "../../../../styles/global.css";
import Header from "../../../../components/Header.astro";
import Footer from "../../../../components/Footer.astro";
import books from "../../../../data/books.json";

// Interfaces TypeScript
interface Book {
  id: number;
  title: string;
  cover: string;
  tags: string[];
  category: string;
}

interface Chapter {
  id: number;
  title: string;
  file: string;
}

interface DetailedBook extends Book {
  slug?: string;
  description?: string;
  status?: string;
  special?: boolean;
  totalChapters?: number;
  chapters?: Chapter[];
}

interface ChapterContent {
  title?: string;
  content?: string[];
  text?: string;
}

// Generar rutas para todos los cap√≠tulos
export async function getStaticPaths() {
  const paths: any[] = [];
  for (const book of books) {
    try {
      const detailedBookModule = await import(
        `../../../../data/books/${book.id}.json`
      );
      const detailedBook: DetailedBook = detailedBookModule.default;
      if (detailedBook.chapters) {
        for (const chapter of detailedBook.chapters) {
          paths.push({
            params: { id: book.id.toString(), capitulo: chapter.id.toString() },
          });
        }
      }
    } catch {
      console.log(`No detailed info found for book ${book.id}`);
    }
  }
  return paths;
}

// Props de la URL
const { id, capitulo } = Astro.params;

// Encontrar libro y cap√≠tulo
const book: Book = books.find((b) => b.id.toString() === id)!;
const detailedBookModule = await import(
  `../../../../data/books/${book.id}.json`
);
const detailedBook: DetailedBook = detailedBookModule.default;

const chapter: Chapter = detailedBook.chapters!.find(
  (ch) => ch.id.toString() === capitulo
)!;

// √çndices de navegaci√≥n
const currentIndex = detailedBook.chapters!.findIndex(
  (ch) => ch.id === chapter.id
);
const prevChapter =
  currentIndex > 0 ? detailedBook.chapters![currentIndex - 1] : null;
const nextChapter =
  currentIndex < detailedBook.chapters!.length - 1
    ? detailedBook.chapters![currentIndex + 1]
    : null;

// üåü Import din√°mico seguro tipado
const chaptersModules = import.meta.glob("../../../../data/novels/**/*.json", {
  eager: true,
}) as Record<string, { default: ChapterContent }>;
const chapterDataModule =
  chaptersModules[`../../../../data/novels/${chapter.file}`];

let chapterContent = "";
if (chapterDataModule) {
  const chapterData = chapterDataModule.default;
  if (chapterData.content) {
    chapterContent += chapterData.content.map((p) => `<p>${p}</p>`).join("");
  } else if (chapterData.text) {
    chapterContent += `<p>${chapterData.text}</p>`;
  } else {
    chapterContent += `<pre>${JSON.stringify(chapterData, null, 2)}</pre>`;
  }
} else {
  chapterContent = `<div class="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
    <h3 class="text-yellow-800 font-semibold">Cap√≠tulo no disponible</h3>
    <p class="text-yellow-700">No se pudo cargar el contenido desde: <code>${chapter.file}</code></p>
  </div>`;
}

// Color seg√∫n categor√≠a
let accentColor = "purple";
if (book.category === "Romance Oscuro") accentColor = "red";
else if (book.category === "Historia Alternativa") accentColor = "emerald";
---

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{chapter.title} - {book.title} - Vane S√°nchez</title>
    <meta
      name="description"
      content={`Lee ${chapter.title} de ${book.title} por Vane S√°nchez`}
    />
  </head>
  <body
    class="font-serif bg-gradient-to-br from-slate-50 to-blue-100 min-h-screen text-gray-800"
  >
    <Header />

    <main class="mt-24 min-h-screen">
      <div class="max-w-4xl mx-auto px-4 py-8">
        <!-- Navegaci√≥n superior -->
        <div class="flex justify-between items-center mb-8">
          <a
            href={`/libro/${book.id}`}
            class={`text-${accentColor}-600 hover:text-${accentColor}-800 font-semibold transition-colors`}
          >
            ‚Üê Volver al libro
          </a>
          <h1 class="text-xl font-bold text-gray-800 text-center">
            {book.title}
          </h1>
          <div class="w-32"></div>
        </div>

        <!-- Contenido del cap√≠tulo -->
        <article
          class="bg-white/90 backdrop-blur-sm rounded-2xl shadow-xl p-8 mb-8"
        >
          <header class="mb-8 text-center border-b border-gray-200 pb-6">
            <h1 class="text-3xl font-bold text-gray-800 mb-2">
              {chapter.title}
            </h1>
            <p class="text-gray-600">
              Cap√≠tulo {currentIndex + 1} de {detailedBook.chapters!.length}
            </p>
          </header>

          <div
            class="prose prose-lg max-w-none text-gray-700 leading-relaxed"
            set:html={chapterContent}
          />
        </article>

        <div class="flex items-center justify-between bg-white/80 backdrop-blur-sm rounded-xl p-6 shadow-lg mb-8">
  
          <!-- Espacio para "Anterior" -->
          <div class="w-24">
            {prevChapter ? (
              <a
                href={`/libro/${book.id}/capitulo/${prevChapter.id}`}
                class={`flex items-center text-${accentColor}-600 hover:text-${accentColor}-800 font-semibold transition-colors group`}
              >
                <span class="group-hover:-translate-x-1 transition-transform">‚Üê</span>
                <span class="ml-2">Anterior</span>
              </a>
            ) : (
              <span class="invisible">Placeholder</span>
            )}
          </div>
        
          <!-- Select -->
          <div class="flex-1 mx-4">
            <label for="chapterSelect" class="block mb-2 font-semibold text-gray-800 text-center">
              üìö Selecciona un cap√≠tulo:
            </label>
            <select
              id="chapterSelect"
              class="w-full bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 p-2.5"
              onchange="window.location.href=this.value"
            >
              {detailedBook.chapters!.map((ch) => (
                <option
                  value={`/libro/${book.id}/capitulo/${ch.id}`}
                  selected={ch.id === chapter.id}
                >
                  {ch.id - 1}. {ch.title}
                </option>
              ))}
            </select>
          </div>
        
          <!-- Espacio para "Siguiente" -->
          <div class="w-24 text-right">
            {nextChapter ? (
              <a
                href={`/libro/${book.id}/capitulo/${nextChapter.id}`}
                class={`flex items-center justify-end text-${accentColor}-600 hover:text-${accentColor}-800 font-semibold transition-colors group`}
              >
                <span class="mr-2">Siguiente</span>
                <span class="group-hover:translate-x-1 transition-transform">‚Üí</span>
              </a>
            ) : (
              <span class="invisible">Placeholder</span>
            )}
          </div>
        
          <!-- Contador -->
          <div class="absolute right-4 bottom-2 text-gray-500 text-sm">
            {currentIndex + 1} / {detailedBook.chapters!.length}
          </div>
        
        </div>
        
      </div>
    </main>

    <Footer />
  </body>
</html>
